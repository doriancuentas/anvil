# Ruff configuration for Anvil projects
# Ultra-fast Python linter and formatter

[tool.ruff]
# Target Python 3.8+ for compatibility
target-version = "py38"
line-length = 88
indent-width = 4

# Enable rule categories
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # Pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "D",     # pydocstyle
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "ANN",   # flake8-annotations
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "EM",    # flake8-errmsg
    "EXE",   # flake8-executable
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "G",     # flake8-logging-format
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "TCH",   # flake8-type-checking
    "INT",   # flake8-gettext
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "ERA",   # eradicate
    "PD",    # pandas-vet
    "PGH",   # pygrep-hooks
    "PL",    # Pylint
    "TRY",   # tryceratops
    "FLY",   # flynt
    "NPY",   # NumPy-specific
    "PERF",  # Perflint
    "LOG",   # flake8-logging
    "RUF",   # Ruff-specific
]

# Disable specific rules that are too strict or conflict
ignore = [
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D105",    # Missing docstring in magic method
    "D107",    # Missing docstring in __init__
    "ANN101",  # Missing type annotation for self
    "ANN102",  # Missing type annotation for cls
    "COM812",  # Trailing comma missing (conflicts with formatter)
    "ISC001",  # Single line implicit string concatenation (conflicts with formatter)
    "PLR0913", # Too many arguments to function call
    "PLR2004", # Magic value used in comparison
    "S101",    # Use of assert detected (common in tests)
    "S603",    # subprocess call: check for execution of untrusted input
    "S607",    # Starting a process with a partial executable path
]

# Exclude common directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
    "scripts",
]

# Allow fix for all enabled rules
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Indent with spaces
indent-style = "space"
# Respect magic trailing commas
skip-magic-trailing-comma = false
# Auto-detect line ending
line-ending = "auto"

[tool.ruff.lint.isort]
# Use vertical hanging indent for imports
multi-line-output-mode = 3
include-trailing-comma = true
force-grid-wrap = 0
use-parentheses = true
ensure-newline-before-comments = true

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings
convention = "google"

[tool.ruff.lint.pylint]
max-args = 6
max-branches = 12
max-returns = 6
max-statements = 50

[tool.ruff.lint.mccabe]
# Flag complex functions
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
# Tests can be more relaxed
"tests/**/*" = [
    "S101",    # assert usage is OK in tests
    "ANN",     # type annotations not required in tests
    "PLR2004", # magic values OK in tests
    "D",       # docstrings not required in tests
]
# Scripts and tools can be more relaxed
"scripts/**/*" = [
    "T20",     # print statements OK in scripts
    "S603",    # subprocess usage OK in scripts
    "S607",    # partial paths OK in scripts
]
# Init files can be empty
"__init__.py" = ["F401"]